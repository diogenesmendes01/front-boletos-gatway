#!/bin/bash

# ============================================
# Script para Configurar Autentica√ß√£o GHCR na VPS
# ============================================
# Este script configura o login no GitHub Container Registry
# para permitir pull de imagens privadas
#
# Uso: ./fix-ghcr-auth.sh
# ============================================

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}Configura√ß√£o de Autentica√ß√£o GHCR${NC}"
echo -e "${BLUE}========================================${NC}\n"

# Verificar configura√ß√£o
if [ -f ".deploy.conf" ]; then
    source .deploy.conf
else
    read -p "Digite o usu√°rio e IP da VPS (ex: usuario@ip): " VPS_HOST
    read -p "Digite a porta SSH (padr√£o 22): " VPS_PORT
    VPS_PORT=${VPS_PORT:-22}
fi

echo -e "${YELLOW}Para configurar o acesso ao GitHub Container Registry, voc√™ precisa:${NC}"
echo "1. Um Personal Access Token (PAT) do GitHub"
echo "2. Permiss√µes: read:packages"
echo ""
echo -e "${BLUE}Como criar o token:${NC}"
echo "1. Acesse: https://github.com/settings/tokens/new"
echo "2. Nome: 'GHCR VPS Access'"
echo "3. Expira√ß√£o: 90 dias (ou mais)"
echo "4. Marque: read:packages"
echo "5. Clique em 'Generate token'"
echo ""

read -p "Voc√™ j√° tem um Personal Access Token? (y/n): " HAS_TOKEN

if [[ ! $HAS_TOKEN =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}Crie o token seguindo as instru√ß√µes acima e execute este script novamente.${NC}"
    exit 0
fi

# Solicitar credenciais
read -p "Digite seu usu√°rio do GitHub: " GITHUB_USER
read -s -p "Digite seu Personal Access Token: " GITHUB_TOKEN
echo ""

# Op√ß√£o 1: Configurar manualmente na VPS
echo -e "\n${YELLOW}Op√ß√£o 1: Configura√ß√£o Manual (Recomendado)${NC}"
echo "Execute estes comandos na sua VPS:"
echo ""
echo "ssh -p ${VPS_PORT} ${VPS_HOST}"
echo "echo '${GITHUB_TOKEN}' | docker login ghcr.io -u ${GITHUB_USER} --password-stdin"
echo ""

# Op√ß√£o 2: Configurar automaticamente
read -p "Deseja configurar automaticamente? (y/n): " AUTO_CONFIG

if [[ $AUTO_CONFIG =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}üîß Configurando autentica√ß√£o na VPS...${NC}"
    
    ssh -p ${VPS_PORT} ${VPS_HOST} <<EOF
        # Login no GHCR
        echo "${GITHUB_TOKEN}" | docker login ghcr.io -u ${GITHUB_USER} --password-stdin
        
        # Testar pull da imagem
        echo "üß™ Testando pull da imagem..."
        docker pull ghcr.io/diogenesmendes01/front-boletos-gatway:latest || {
            echo "‚ùå Falha ao fazer pull da imagem"
            echo "Verifique se:"
            echo "1. O token tem permiss√£o read:packages"
            echo "2. O nome da imagem est√° correto"
            echo "3. A imagem foi publicada no GHCR"
            exit 1
        }
        
        echo "‚úÖ Autentica√ß√£o configurada com sucesso!"
EOF
    
    echo -e "${GREEN}‚úÖ Configura√ß√£o conclu√≠da!${NC}"
fi

# Op√ß√£o 3: Usar imagem p√∫blica
echo -e "\n${YELLOW}Op√ß√£o Alternativa: Tornar a imagem p√∫blica${NC}"
echo "1. Acesse: https://github.com/users/diogenesmendes01/packages/container/front-boletos-gatway/settings"
echo "2. Em 'Danger Zone', clique em 'Change visibility'"
echo "3. Selecione 'Public' e confirme"
echo ""
echo "Isso permitir√° que qualquer um fa√ßa pull da imagem sem autentica√ß√£o."

# Criar script de verifica√ß√£o
cat > check-ghcr.sh <<'CHECK'
#!/bin/bash
# Script para verificar status do GHCR

echo "üîç Verificando autentica√ß√£o Docker..."
docker login ghcr.io --get-login 2>/dev/null && echo "‚úÖ Autenticado" || echo "‚ùå N√£o autenticado"

echo ""
echo "üîç Testando pull da imagem..."
docker pull ghcr.io/diogenesmendes01/front-boletos-gatway:latest && echo "‚úÖ Pull bem-sucedido" || echo "‚ùå Pull falhou"

echo ""
echo "üîç Listando imagens locais..."
docker images | grep front-boletos
CHECK

chmod +x check-ghcr.sh

echo -e "\n${BLUE}Script de verifica√ß√£o criado: check-ghcr.sh${NC}"
echo "Execute na VPS para verificar o status:"
echo "scp -P ${VPS_PORT} check-ghcr.sh ${VPS_HOST}:/tmp/"
echo "ssh -p ${VPS_PORT} ${VPS_HOST} 'bash /tmp/check-ghcr.sh'"

echo -e "\n${GREEN}üéØ Pr√≥ximos passos:${NC}"
echo "1. Execute o deploy novamente:"
echo "   git push origin main"
echo "2. Ou fa√ßa deploy manual:"
echo "   ./deploy-manual.sh"